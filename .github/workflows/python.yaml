# This is a workflow for XXXX Project with Actions
name: Run python script
# Controls when the workflow will run
on:
  push
  
# A workflow run is made up of one or more jobs that can run sequentially
jobs:
  jmeter_job:
# The type of runner that the job will run on  
    runs-on: pythonscript

    permissions:
      id-token: write
      contents: read
    
# Git Checks-out our repository      
    name: JMeter Test Execution
    steps:      
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v2 
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install requests boto3 pandas openpyxl

   # Run the Jmeter test cases
    - name: Run JMeter Tests
      run: |
       ls
       jmeter -n -t ./SampleAPI.jmx -Jpath=api/users?page=1 -Jduration=110 -Jusers=10 -Jrampup=10 -l ./SampleAPIjtl.jtl
      
   # Upload the Jmeter results    
    - name: Upload Results
      uses: actions/upload-artifact@v4
      with:
        name: jmeter-results
        path: SampleAPIjtl.jtl
        if-no-files-found: error
    # Generate an HTML Report    
    - name: Run JMeter Tests
      run: |
       ls
       jmeter -Jjmeter.reportgenerator.exporter.html.series_filter="((T[0-9] {1,3}_))" -g ./SampleAPIjtl.jtl -o ./HTMLReport
#filtered 
  # upload the HTML Reports    
    - name: Upload HTML Reports
      uses: actions/upload-artifact@v4
      with:
        name: jmeter-html-reports
        path: HTMLReport
        if-no-files-found: error

  # Download the HTML Reports    
    - name: Download HTML Reports
      uses: actions/download-artifact@v4
      with:
        name: jmeter-html-reports
        path: HTMLReport
        run: ls -la
        if-no-files-found: error

    - name: Configure AWS credentials login
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::739275441922:role/Suhas-OIDC
        aws-region: us-east-1

    - name: Github token
      run: echo "MY_GITHUB_TOKEN=${{ secrets.MY_GITHUB_TOKEN }}" >> $GITHUB_ENV
  # Run python script to convert .json to .csv
    # - name: Run python script
    #   run: |
    #    python3 python.py

    # Run python script to compare results
    - name: Run python script
      run: |
       python3 comparision-updated.py
  
